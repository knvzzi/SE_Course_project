Microsoft (R) Macro Assembler Version 14.29.30153.0	    12/17/23 21:23:22
ASM.asm							     Page 1 - 1


				.586
				.model flat, stdcall
				includelib ..\Debug\StandartLib.lib
				includelib kernel32.lib
				includelib libucrt.lib

				ExitProcess PROTO : DWORD
				copystr PROTO : DWORD, : DWORD
				joinst PROTO : DWORD, : DWORD
				outstr PROTO : DWORD
				outint PROTO : SDWORD 
				.stack 4096
 00000000			.const
 00000000 45 52 52 4F 52		overflow db 'ERROR: VARIABLE OVERFLOW', 0 
	   3A 20 56 41 52
	   49 41 42 4C 45
	   20 4F 56 45 52
	   46 4C 4F 57 00
 00000019 45 52 52 4F 52		null_division db 'ERROR: DIVISION BY ZERO', 0
	   3A 20 44 49 56
	   49 53 49 4F 4E
	   20 42 59 20 5A
	   45 52 4F 00
 00000031 00000005			L1 SDWORD 5
 00000035 00000001			L2 SDWORD 1
 00000039 20 63 68 69 73		L3 BYTE " chisla ", 0
	   6C 61 20 00
 00000042 20 66 69 62 6F		L4 BYTE " fibonachi ", 0
	   6E 61 63 68 69
	   20 00
 0000004E 20 63 68 69 73		L7 BYTE " chislo ", 0
	   6C 6F 20 00
 00000057 20 6F 74 68 65		L8 BYTE " other ", 0
	   72 20 00
 0000005F 00000009			L9 SDWORD 9
 00000063 00000003			L10 SDWORD 3
 00000067 00000000			L11 SDWORD 0
 00000000			.data
 00000000 00000000			Funcx SDWORD 0
 00000004 00000000			Funcprev SDWORD 0
 00000008 00000000			Funccur SDWORD 0
 0000000C 00000000			Functemp SDWORD 0
 00000010 00000000			majorrez SDWORD 0
 00000014 00000000			majorother SDWORD 0
 00000018  000000FF [			majorm BYTE 255 DUP(0)
	    00
	   ]
 00000117  000000FF [			majorn BYTE 255 DUP(0)
	    00
	   ]
 00000216  000000FF [			majorq BYTE 255 DUP(0)
	    00
	   ]
 00000315  000000FF [			majore BYTE 255 DUP(0)
	    00
	   ]
 00000414  000000FF [			majors BYTE 255 DUP(0)
	    00
	   ]
 00000513 00000000			majoroct SDWORD 0
 00000517 00000000			majorbin SDWORD 0
 00000000			.code

 00000000			Func_proc PROC, Funcp : SDWORD, Funcc : SDWORD
 00000003  FF 75 08			push Funcp
 00000006  8F 05 00000004 R		pop Funcprev
 0000000C  FF 75 0C			push Funcc
 0000000F  8F 05 00000008 R		pop Funccur
 00000015				CYCLE: 
 00000015  FF 35 00000008 R		push Funccur
 0000001B  8F 05 0000000C R		pop Functemp
 00000021  FF 35 0000000C R		push Functemp
 00000027  FF 35 00000004 R		push Funcprev
 0000002D  58				pop eax
 0000002E  5B				pop ebx
 0000002F  03 C3			add eax, ebx
 00000031  70 5C			jo EXIT_OVERFLOW
 00000033  50				push eax
 00000034  8F 05 00000008 R		pop Funccur
 0000003A  FF 35 0000000C R		push Functemp
 00000040  8F 05 00000004 R		pop Funcprev
 00000046  FF 35 00000000 R		push Funcx
 0000004C  FF 35 00000035 R		push L2
 00000052  58				pop eax
 00000053  5B				pop ebx
 00000054  03 C3			add eax, ebx
 00000056  70 37			jo EXIT_OVERFLOW
 00000058  50				push eax
 00000059  8F 05 00000000 R		pop Funcx
 0000005F  3B 05 00000031 R		cmp eax,L1
 00000065  7F 04			jg NEXTL
 00000067  74 08			je NEXT
 00000069  E2 AA			loop CYCLE
 0000006B				NEXTL:
 0000006B  FF 35 00000031 R		push L1
 00000071				NEXT:
 00000071  FF 35 00000008 R		push Funccur
 00000077  58				pop eax
 00000079  C2 0008			ret 8


 0000007C  EB 22			jmp EXIT
 0000007E				EXIT_DIV_ON_NULL:
 0000007E  68 00000019 R		push offset null_division
 00000083  E8 00000000 E		call outstr
 00000088  6A FF			push - 1
 0000008A  E8 00000000 E		call ExitProcess

 0000008F				EXIT_OVERFLOW:
 0000008F  68 00000000 R		push offset overflow
 00000094  E8 00000000 E		call outstr
 00000099  6A FE			push - 2
 0000009B  E8 00000000 E		call ExitProcess

 000000A0				EXIT:
 000000A0  58				pop eax
 000000A2  C3				ret 0

 000000A3			Func_proc ENDP

 000000A3			main PROC
 000000A3  68 00000039 R		push offset L3
 000000A8  68 00000018 R		push offset majorm
 000000AD  E8 00000000 E		call copystr

 000000B2  68 00000042 R		push offset L4
 000000B7  68 00000117 R		push offset majorn
 000000BC  E8 00000000 E		call copystr

 000000C1  68 00000018 R		push offset majorm
 000000C6  68 00000117 R		push offset majorn
 000000CB  E8 00000000 E		call joinst
 000000D0  50				push eax
 000000D1  68 00000216 R		push offset majorq
 000000D6  E8 00000000 E		call copystr

 000000DB  68 00000216 R		push offset majorq
 000000E0  E8 00000000 E		call outstr

 000000E5  FF 35 00000035 R		push L2
 000000EB  FF 35 00000035 R		push L2
 000000F1  E8 FFFFFF0A			call Func_proc
 000000F6  50				push eax
 000000F7  8F 05 00000010 R		pop majorrez
 000000FD  FF 35 00000010 R		push majorrez
 00000103  E8 00000000 E		call outint

 00000108  68 0000004E R		push offset L7
 0000010D  68 00000117 R		push offset majorn
 00000112  E8 00000000 E		call copystr

 00000117  68 00000057 R		push offset L8
 0000011C  68 00000018 R		push offset majorm
 00000121  E8 00000000 E		call copystr

 00000126  68 00000018 R		push offset majorm
 0000012B  68 00000117 R		push offset majorn
 00000130  E8 00000000 E		call joinst
 00000135  0F 80 000000BD		jo EXIT_OVERFLOW
 0000013B  50				push eax
 0000013C  68 00000216 R		push offset majorq
 00000141  E8 00000000 E		call copystr

 00000146  68 00000216 R		push offset majorq
 0000014B  E8 00000000 E		call outstr

 00000150  FF 35 0000005F R		push L9
 00000156  8F 05 00000513 R		pop majoroct
 0000015C  FF 35 00000513 R		push majoroct
 00000162  FF 35 00000010 R		push majorrez
 00000168  58				pop eax
 00000169  5B				pop ebx
 0000016A  03 C3			add eax, ebx
 0000016C  0F 80 00000086		jo EXIT_OVERFLOW
 00000172  50				push eax
 00000173  8F 05 00000014 R		pop majorother
 00000179  FF 35 00000014 R		push majorother
 0000017F  E8 00000000 E		call outint

 00000184  68 00000018 R		push offset majorm
 00000189  68 00000315 R		push offset majore
 0000018E  E8 00000000 E		call copystr
 00000193  50				push eax
 00000194  68 00000414 R		push offset majors
 00000199  E8 00000000 E		call copystr

 0000019E  68 00000414 R		push offset majors
 000001A3  E8 00000000 E		call outstr

 000001A8  FF 35 00000063 R		push L10
 000001AE  8F 05 00000517 R		pop majorbin
 000001B4  FF 35 00000517 R		push majorbin
 000001BA  FF 35 00000010 R		push majorrez
 000001C0  58				pop eax
 000001C1  5B				pop ebx
 000001C2  03 C3			add eax, ebx
 000001C4  70 32			jo EXIT_OVERFLOW
 000001C6  50				push eax
 000001C7  8F 05 00000014 R		pop majorother
 000001CD  FF 35 00000014 R		push majorother
 000001D3  E8 00000000 E		call outint

 000001D8  FF 35 00000067 R		push L11
 000001DE  6A 00			push 0
 000001E0  E8 00000000 E		call ExitProcess


 000001E5  EB 22			jmp EXIT
 000001E7				EXIT_DIV_ON_NULL:
 000001E7  68 00000019 R		push offset null_division
 000001EC  E8 00000000 E		call outstr
 000001F1  6A FF			push - 1
 000001F3  E8 00000000 E		call ExitProcess

 000001F8				EXIT_OVERFLOW:
 000001F8  68 00000000 R		push offset overflow
 000001FD  E8 00000000 E		call outstr
 00000202  6A FE			push - 2
 00000204  E8 00000000 E		call ExitProcess

 00000209				EXIT:
 00000209  6A 00			push 0
 0000020B  E8 00000000 E		call ExitProcess

 00000210			main ENDP
				end main
Microsoft (R) Macro Assembler Version 14.29.30153.0	    12/17/23 21:23:22
ASM.asm							     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 0000006B Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000051B Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000210 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Func_proc  . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000000A3 Public STDCALL
  Funcp  . . . . . . . . . . . .	DWord	 bp + 00000008
  Funcc  . . . . . . . . . . . .	DWord	 bp + 0000000C
  CYCLE  . . . . . . . . . . . .	L Near	 00000015 _TEXT	
  NEXTL  . . . . . . . . . . . .	L Near	 0000006B _TEXT	
  NEXT . . . . . . . . . . . . .	L Near	 00000071 _TEXT	
  EXIT_DIV_ON_NULL . . . . . . .	L Near	 0000007E _TEXT	
  EXIT_OVERFLOW  . . . . . . . .	L Near	 0000008F _TEXT	
  EXIT . . . . . . . . . . . . .	L Near	 000000A0 _TEXT	
copystr  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
joinst . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 000000A3 _TEXT	Length= 0000016D Public STDCALL
  EXIT_DIV_ON_NULL . . . . . . .	L Near	 000001E7 _TEXT	
  EXIT_OVERFLOW  . . . . . . . .	L Near	 000001F8 _TEXT	
  EXIT . . . . . . . . . . . . .	L Near	 00000209 _TEXT	
outint . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
outstr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
Funccur  . . . . . . . . . . . .	DWord	 00000008 _DATA	
Funcprev . . . . . . . . . . . .	DWord	 00000004 _DATA	
Functemp . . . . . . . . . . . .	DWord	 0000000C _DATA	
Funcx  . . . . . . . . . . . . .	DWord	 00000000 _DATA	
L10  . . . . . . . . . . . . . .	DWord	 00000063 CONST	
L11  . . . . . . . . . . . . . .	DWord	 00000067 CONST	
L1 . . . . . . . . . . . . . . .	DWord	 00000031 CONST	
L2 . . . . . . . . . . . . . . .	DWord	 00000035 CONST	
L3 . . . . . . . . . . . . . . .	Byte	 00000039 CONST	
L4 . . . . . . . . . . . . . . .	Byte	 00000042 CONST	
L7 . . . . . . . . . . . . . . .	Byte	 0000004E CONST	
L8 . . . . . . . . . . . . . . .	Byte	 00000057 CONST	
L9 . . . . . . . . . . . . . . .	DWord	 0000005F CONST	
majorbin . . . . . . . . . . . .	DWord	 00000517 _DATA	
majore . . . . . . . . . . . . .	Byte	 00000315 _DATA	
majorm . . . . . . . . . . . . .	Byte	 00000018 _DATA	
majorn . . . . . . . . . . . . .	Byte	 00000117 _DATA	
majoroct . . . . . . . . . . . .	DWord	 00000513 _DATA	
majorother . . . . . . . . . . .	DWord	 00000014 _DATA	
majorq . . . . . . . . . . . . .	Byte	 00000216 _DATA	
majorrez . . . . . . . . . . . .	DWord	 00000010 _DATA	
majors . . . . . . . . . . . . .	Byte	 00000414 _DATA	
null_division  . . . . . . . . .	Byte	 00000019 CONST	
overflow . . . . . . . . . . . .	Byte	 00000000 CONST	

	   0 Warnings
	   0 Errors
